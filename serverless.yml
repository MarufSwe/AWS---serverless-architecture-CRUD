service: demoPythonApp

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  memorySize: 128
  environment:
    graphql_api_url: { Fn::GetAtt: [ GraphQlApi, GraphQLUrl ] }
    aws_region : {Ref: AWS::Region}
    dynamodb_table: 'demoPythonApp'
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:BatchWriteItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
            - 'dynamodb:GetItem'
            - 'dynamodb:Query'
            - 'dynamodb:Scan'
            - 's3:PutObject'
          Resource: "*"

plugins:
  - serverless-appsync-plugin

functions:
  demoPythonApp:
    handler: handler/handler.lambda_handler
    name: _demoPython



resources:
  Resources:
    demo:
      Type: AWS::DynamoDB::Table
      Properties:
<<<<<<< HEAD
        TableName: demoPythonApp
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK # partition key
            KeyType: HASH
          - AttributeName: SK # sort key
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
=======
        Path: /
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Principal:
                Federated: 'cognito-identity.amazonaws.com'
              Action:
                - 'sts:AssumeRoleWithWebIdentity'
              Condition:
                StringEquals:
                  'cognito-identity.amazonaws.com:aud': !Ref UserIdentityPool
                'ForAnyValue:StringLike':
                  'cognito-identity.amazonaws.com:amr': authenticated
        Policies:
          - PolicyName: 'CognitoAdminAuthorizedPolicy'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'appsync:GraphQL'
                    - 's3:PutObject'
                  Resource: 
                  - !Join  
                    - ''
                    - - ${self:provider.environment.aws_iam_appsync_query_resource}
                      - '*'
                  - !Join  
                    - ''
                    - - ${self:provider.environment.aws_iam_appsync_mutation_resource}
                      - '*'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::savvy-backend-resource-bucket/timeTrialQuestion/monthly/questionImages/*.png'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::savvy-backend-resource-bucket/timeTrialQuestion/monthly/questionImages/*.jpg'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::savvy-backend-resource-bucket/timeTrialQuestion/monthly/themeBackgroundImages/*.png'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::savvy-backend-resource-bucket/timeTrialQuestion/monthly/themeBackgroundImages/*.jpg'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::savvy-backend-resource-bucket/timeTrialQuestion/monthly/themeSymbolImages/*.png'
                  - !Join
                    - ''
                    - - 'arn:aws:s3:::savvy-backend-resource-bucket/timeTrialQuestion/monthly/themeSymbolImages/*.jpg'
                  # - !Join
                  #   - ''
                  #   - - 'arn:aws:s3:::savvy-backend-resource-bucket/*.png'
                  # - !Join  
                  #   - ''
                  #   - - ${self:provider.environment.aws_iam_appsync_mutation_resource}
                  #     - 'regenerateCognitoUserIdentities'
                  # - !Join  
                  #   - ''
                  #   - - ${self:provider.environment.aws_iam_appsync_mutation_resource}
                  #     - 'refreshUserIdToken'
                  # - !Join  
                  #   - ''
                  #   - - ${self:provider.environment.aws_iam_appsync_mutation_resource}
                  #     - 'registerNewUser'
                  # - !Join  
                  #   - ''
                  #   - - ${self:provider.environment.aws_iam_appsync_mutation_resource}
                  #     - 'createMonthlyTimerTrialQuestionTheme'           
        
    UserPoolGroups:
      Type: AWS::Cognito::UserPoolGroup
      Properties: 
        Description: "admin will get all access"
        GroupName: admin
        RoleArn: !GetAtt [CognitoAdminAuthRole, Arn]
        UserPoolId: 
          Ref: UserPool

    UserPoolUser:
      Type: AWS::Cognito::UserPoolUser
      Properties: 
        # ClientMetadata: Json
        DesiredDeliveryMediums: 
          - EMAIL
        # ForceAliasCreation: Boolean
        MessageAction: SUPPRESS
        UserAttributes: 
          - Name: email
            Value: "armanazad.sakib@gmail.com"
        Username: "armanazad.sakib@gmail.com"
        UserPoolId: 
          Ref: UserPool
        # ValidationData: 
        #   - AttributeType

    UserPoolUserToGroupAttachment:
      Type: AWS::Cognito::UserPoolUserToGroupAttachment
      Properties: 
        GroupName: "admin"
        Username: "armanazad.sakib@gmail.com"
        UserPoolId: 
          Ref: UserPool
>>>>>>> 4a26c2769771bc6f82765205418a721562b669f9




custom:
  projectName: demoPythonApp
  # customBucketName: savvy-backend-resource-bucket
  appSync:
    name: ${self:custom.projectName}_appsync
    # authenticationType: API_KEY
    authenticationType: API_KEY
    # additionalAuthenticationProviders:
    #   - authenticationType: API_KEY
    #   - authenticationType: AMAZON_COGNITO_USER_POOLS
    #     userPoolConfig:
    #       awsRegion: us-east-1
    #       userPoolId: ${self:provider.environment.user_pool_id}
    mappingTemplates:
      - type: Query
        field: demoPythonApp
        dataSource: create_demoPythonDataSource
        request: false
        response: false

      - type: Mutation
        field: demoPythonApp
        dataSource: create_demoPythonDataSource
        request: false
        response: false

<<<<<<< HEAD
=======
      # time trail monthly question query configuration
      - type: Query
        field: getMonthlyTimerTrialQuestion
        dataSource: savvy_admin_appsync_${self:custom.monthlyTimeTrailQuestion}_source
        request: false
        response: false

      # time trail monthly theme mutation configuration 
>>>>>>> 4a26c2769771bc6f82765205418a721562b669f9
      - type: Mutation
        field: demoUpdatePythonApp
        dataSource: create_demoPythonDataSource
        request: false
        response: false

      - type: Mutation
        field: deleteUser
        dataSource: create_demoPythonDataSource
        request: false
        response: false
<<<<<<< HEAD
    dataSources:
=======

      # time trail monthly question mutation configuration 
      - type: Mutation
        field: createMonthlyTimerTrialQuestion
        dataSource: savvy_admin_appsync_${self:custom.monthlyTimeTrailQuestion}_source
        request: false
        response: false
      - type: Mutation
        field: updateMonthlyTimerTrialQuestion
        dataSource: savvy_admin_appsync_${self:custom.monthlyTimeTrailQuestion}_source
        request: false
        response: false

    dataSources:        
>>>>>>> 4a26c2769771bc6f82765205418a721562b669f9
      - type: AWS_LAMBDA
        name: create_demoPythonDataSource
        config:
          functionName: demoPythonApp


          # sls deploy
          # sls logs --function [function name ]
          # sls deploy function --function demoApp
          # sls info
          # da2-fqpvbosgh5a3jkqxpnduf7miqi //api_key